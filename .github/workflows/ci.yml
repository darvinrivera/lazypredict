name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
  release:
    types:
      - published

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install setuptools wheel twine

    - name: Build and publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true

    - name: Install conda-build and anaconda-client
      run: conda install conda-build anaconda-client

    - name: Build Conda package
      run: conda build conda-recipe

    - name: Upload to Anaconda.org
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        anaconda login --token $ANACONDA_TOKEN
        anaconda upload /home/runner/miniconda3/conda-bld/noarch/lazypredict-*.tar.bz2 --user YOUR_ANACONDA_USERNAME
